// <auto-generated />
using KT.Turnstile.Manage.Service.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KT.Turnstile.Manage.Service.Migrations
{
    [DbContext(typeof(QuantaDbContext))]
    [Migration("20200709053417_V1.5.0")]
    partial class V150
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.CardDeviceEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HandleElevatorDeviceId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PortName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RelayDeviceId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("RelayDeviceOut")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SerialConfigId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("RelayDeviceId");

                    b.HasIndex("SerialConfigId");

                    b.ToTable("CARD_DEVICE");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.CardDeviceRightGroupEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CARD_DEVICE_RIGHT_GROUP");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.CardDeviceRightGroupRelationCardDeviceEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardDeviceId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardDeviceRightGroupId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CardDeviceRightGroupId");

                    b.HasIndex("CardDeviceId", "CardDeviceRightGroupId")
                        .IsUnique();

                    b.ToTable("CARD_DEVICE_RIGHT_GROUP_RELATION_CARD_DEVICE");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.DistributeErrorEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DataContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DataId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DataModelName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ErrorTimes")
                        .HasColumnType("int");

                    b.Property<string>("PartUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ProcessorId");

                    b.ToTable("DISTRIBUTE_ERROR");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.LoginUserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBAddr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PCAddr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PCPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PCUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LOGIN_USER");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.PassRecordEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CardType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DeviceType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PassLocalTime")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PassRightId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("PassTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PASS_RECORD");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.PassRightEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("TimeNow")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeOut")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CardNumber")
                        .IsUnique();

                    b.ToTable("PASS_RIGHT");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.PassRightRelationCardDeviceRightGroupEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CardDeviceRightGroupId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PassRightId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CardDeviceRightGroupId");

                    b.HasIndex("PassRightId", "CardDeviceRightGroupId")
                        .IsUnique();

                    b.ToTable("PASS_RIGHT_RELATION_CARD_DEVICE_RIGHT_GROUP");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.ProcessorEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("HasDistributeError")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("ProcessorKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("SyncDataTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProcessorKey")
                        .IsUnique();

                    b.HasIndex("IpAddress", "Port")
                        .IsUnique();

                    b.ToTable("PROCESSOR");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.RelayDeviceEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CommunicateType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("IpAddress", "Port")
                        .IsUnique();

                    b.ToTable("RELAY_DEVICE");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.SerialConfigEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Baudrate")
                        .HasColumnType("int");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Databits")
                        .HasColumnType("int");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Encoding")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Parity")
                        .HasColumnType("int");

                    b.Property<int>("ReadTimeout")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Stopbits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SERIAL_CONFIG");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.SystemConfigEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Key")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SYSTEM_CONFIG");
                });

            modelBuilder.Entity("KT.Turnstile.Manage.Service.Entities.ThirdServerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBAddr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DBUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("EditedTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Editor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PCAddr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PCPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PCPort")
                        .HasColumnType("int");

                    b.Property<string>("PCUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("THIRD_SERVER");
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.CardDeviceEntity", b =>
                {
                    b.HasOne("KT.Turnstile.Entity.Entities.ProcessorEntity", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KT.Turnstile.Entity.Entities.RelayDeviceEntity", "RelayDevice")
                        .WithMany()
                        .HasForeignKey("RelayDeviceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KT.Turnstile.Entity.Entities.SerialConfigEntity", "SerialConfig")
                        .WithMany()
                        .HasForeignKey("SerialConfigId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.CardDeviceRightGroupRelationCardDeviceEntity", b =>
                {
                    b.HasOne("KT.Turnstile.Entity.Entities.CardDeviceEntity", "CardDevice")
                        .WithMany()
                        .HasForeignKey("CardDeviceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KT.Turnstile.Entity.Entities.CardDeviceRightGroupEntity", "CardDeviceRightGroup")
                        .WithMany("RelationCardDevices")
                        .HasForeignKey("CardDeviceRightGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.DistributeErrorEntity", b =>
                {
                    b.HasOne("KT.Turnstile.Entity.Entities.ProcessorEntity", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("KT.Turnstile.Entity.Entities.PassRightRelationCardDeviceRightGroupEntity", b =>
                {
                    b.HasOne("KT.Turnstile.Entity.Entities.CardDeviceRightGroupEntity", "CardDeviceRightGroup")
                        .WithMany()
                        .HasForeignKey("CardDeviceRightGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KT.Turnstile.Entity.Entities.PassRightEntity", "PassRight")
                        .WithMany("RelationCardDeviceRightGroups")
                        .HasForeignKey("PassRightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
